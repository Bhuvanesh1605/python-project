import tkinter as tk
from tkinter import messagebox
from tkinter import simpledialog

class TodoApp:
    def __init__(self, root):
        self.root = root
        self.root.title("To-Do List App")
        self.root.geometry("400x400")

        self.tasks = []

        # Load tasks from file
        self.load_tasks()

        # Create GUI elements
        self.create_widgets()

    def create_widgets(self):
        self.tasks_frame = tk.Frame(self.root)
        self.tasks_frame.pack(pady=10)

        self.tasks_listbox = tk.Listbox(self.tasks_frame, width=50, height=15)
        self.tasks_listbox.pack(side=tk.LEFT, fill=tk.BOTH)

        self.scrollbar = tk.Scrollbar(self.tasks_frame)
        self.scrollbar.pack(side=tk.RIGHT, fill=tk.BOTH)

        self.tasks_listbox.config(yscrollcommand=self.scrollbar.set)
        self.scrollbar.config(command=self.tasks_listbox.yview)

        self.entry_task = tk.Entry(self.root, width=50)
        self.entry_task.pack(pady=10)

        self.button_add_task = tk.Button(self.root, text="Add Task", width=48, command=self.add_task)
        self.button_add_task.pack(pady=5)

        self.button_delete_task = tk.Button(self.root, text="Delete Task", width=48, command=self.delete_task)
        self.button_delete_task.pack(pady=5)

        self.button_clear_all_tasks = tk.Button(self.root, text="Clear All Tasks", width=48, command=self.clear_all_tasks)
        self.button_clear_all_tasks.pack(pady=5)

        self.button_save_tasks = tk.Button(self.root, text="Save Tasks", width=48, command=self.save_tasks)
        self.button_save_tasks.pack(pady=5)

        # Populate listbox with tasks
        self.update_tasks_listbox()

    def add_task(self):
        task = self.entry_task.get()
        if task != "":
            self.tasks.append(task)
            self.update_tasks_listbox()
            self.entry_task.delete(0, tk.END)
        else:
            messagebox.showwarning("Warning", "You must enter a task.")

    def delete_task(self):
        try:
            selected_task_index = self.tasks_listbox.curselection()[0]
            del self.tasks[selected_task_index]
            self.update_tasks_listbox()
        except IndexError:
            messagebox.showwarning("Warning", "You must select a task to delete.")

    def clear_all_tasks(self):
        if messagebox.askyesno("Confirm", "Do you really want to delete all tasks?"):
            self.tasks.clear()
            self.update_tasks_listbox()

    def update_tasks_listbox(self):
        self.tasks_listbox.delete(0, tk.END)
        for task in self.tasks:
            self.tasks_listbox.insert(tk.END, task)

    def save_tasks(self):
        with open("tasks.txt", "w") as f:
            for task in self.tasks:
                f.write(f"{task}\n")
        messagebox.showinfo("Info", "Tasks saved successfully.")

    def load_tasks(self):
        try:
            with open("tasks.txt", "r") as f:
                self.tasks = [line.strip() for line in f]
        except FileNotFoundError:
            self.tasks = []

if __name__ == "__main__":
    root = tk.Tk()
    app = TodoApp(root)
    root.mainloop()
